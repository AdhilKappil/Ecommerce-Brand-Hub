<%-include('../users/layouts/header.ejs') %>
<%-include('../users/layouts/navBar.ejs') %>


	<!-- breadcrumb -->
	<div class="container">
		<div class="bread-crumb flex-w p-l-25 p-r-15 p-t-30 p-lr-0-lg m-t-90">
			<a href="/home" class="stext-109 cl8 hov-cl1 trans-04">
				Home
				<i class="fa fa-angle-right m-l-9 m-r-10" aria-hidden="true"></i>
			</a>

			<span class="stext-109 cl4">
				Shoping Cart
			</span>
		</div>
	</div>
		

	<!-- Shoping Cart -->
	<form class="bg0 p-t-75 p-b-85">
		<div class="container-fluid">
			<div class="row">
				<div class="col-lg-10 col-xl-7 m-lr-auto m-b-50">
					<div class="m-l-25 m-r--38 m-lr-0-xl">
						<div class="wrap-table-shopping-cart">
							<table class="table-shopping-cart">
							  <% if (total != 0) { %>
								<tr class="table_head">
								  <th class="column-1">Product</th>
								  <th class="column-2"></th>
								  <th class="column-3">Price</th>
								  <th class="column-4">Quantity</th>
								  <th class="column-5">Total</th>
								  <th class="column-6">Actions</th>
								</tr>
						  
								<% for (i = 0; i < cartItems.products.length; i++) { %>
								  <tr class="table_row">
									<td class="column-1">
									  <div class="how-itemcart1">
										<img src="/static/adminAssets/images/products/<%= cartItems.products[i].productId.images[0] %>" alt="IMG">
									  </div>
									</td>
									<td class="column-2"><%= cartItems.products[i].productId.productName %></td>
									<td class="column-3 product-price"><%= cartItems.products[i].productId.price %></td>
									<td class="column-4">
									  <div class="wrap-num-product flex-w m-l-auto m-r-0">
										<div class="btn-num-product-down cl8 hov-btn3 trans-04 flex-c-m js-btn-minus">
										  <i class="fs-16 zmdi zmdi-minus"></i>
										</div>
										<input class="mtext-104 cl3 txt-center num-product quantity-input" type="number" name="num-product1" data-product-id="<%= cartItems.products[i].productId._id %>" value="<%= cartItems.products[i].quantity %>">
										<div class="btn-num-product-up cl8 hov-btn3 trans-04 flex-c-m js-btn-plus">
										  <i class="fs-16 zmdi zmdi-plus"></i>
										</div>
									  </div>
									</td>
									<td class="column-5 total-price"><%- (cartItems.products[i].productId.price) * (cartItems.products[i].quantity) %></td>
									<td class="column-6">
										<button type="button" class="btn btn btn-outline-primary-2" onclick="removeCartItem('<%= user._id %>',
										'<%= cartItems.products[i].productId._id %>','<%= cartItems.products[i].quantity %>')">Remove</button>
									</td>
								  </tr>
								<% } %>
						  
							  <% } else { %>
								<tr>
								  <td class="price-col w-100 text-center text-light" colspan="6">
									<h2 class="icon-shopping-cart text-light"></h2>Your Cart is Empty
								  </td>
								</tr>
							  <% } %>
							</table>
						  </div>
						  

						<div class="flex-w flex-sb-m bor15 p-t-18 p-b-15 p-lr-40 p-lr-15-sm">
							<div class="flex-w flex-m m-r-20 m-tb-5">
								<input class="stext-104 cl2 plh4 size-117 bor13 p-lr-20 m-r-10 m-tb-5" type="text" name="coupon" placeholder="Coupon Code">
									
								<div class="flex-c-m stext-101 cl2 size-118 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-5">
									Apply coupon
								</div>
							</div>

							<div class="flex-c-m stext-101 cl2 size-119 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer m-tb-10">
								Update Cart
							</div>
						</div>
					</div>
				</div>

				<div class="col-sm-10 col-lg-7 col-xl-5 m-lr-auto m-b-50">
					<div class="bor10 p-lr-40 p-t-30 p-b-40 m-l-63 m-r-40 m-lr-0-xl p-lr-15-sm">
						<h4 class="mtext-109 cl2 p-b-30">
							Cart Totals
						</h4>

						<div class="flex-w flex-t bor12 p-b-13">
							<div class="size-208">
								<span class="stext-110 cl2">
									Subtotal:
								</span>
							</div>

							<div class="size-209">
								<span class="mtext-110 cl2 subtotal">
									₹ <%= total%>
								</span>
							</div>
						</div>

						<div class="flex-w flex-t bor12 p-t-15 p-b-30">
							<div class="size-208 w-full-ssm">
								<span class="stext-110 cl2">
									Shipping:
								</span>
							</div>

							<div class="size-209 p-r-18 p-r-0-sm w-full-ssm">
								<p class="stext-111 cl6 p-t-2">
									There are no shipping methods available. Please double check your address, or contact us if you need any help.
								</p>
								
								<div class="p-t-15">
									<span class="stext-112 cl8">
										Calculate Shipping
									</span>

									<div class="rs1-select2 rs2-select2 bor8 bg0 m-b-12 m-t-9">
										<select class="js-select2" name="time">
											<option>Select a country...</option>
											<option>USA</option>
											<option>UK</option>
										</select>
										<div class="dropDownSelect2"></div>
									</div>

									<div class="bor8 bg0 m-b-12">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="state" placeholder="State /  country">
									</div>

									<div class="bor8 bg0 m-b-22">
										<input class="stext-111 cl8 plh3 size-111 p-lr-15" type="text" name="postcode" placeholder="Postcode / Zip">
									</div>
									
									<div class="flex-w">
										<div class="flex-c-m stext-101 cl2 size-115 bg8 bor13 hov-btn3 p-lr-15 trans-04 pointer">
											Update Totals
										</div>
									</div>
										
								</div>
							</div>
						</div>

						<div class="flex-w flex-t p-t-27 p-b-33">
							<div class="size-208">
								<span class="mtext-101 cl2">
									Total:
								</span>
							</div>

							<div class="size-209 p-t-1">
								<span class="mtext-110 cl2 subtotal">
									₹ <%= total%>
								</span>
							</div>
						</div>
						<a href="/checkout" class="btn  btn-order btn-block btn btn-outline-primary-2">PROCEED TO CHECKOUT</a>

					</div>
				</div>
			</div>
		</div>
	</form>


	<!-- // ================ quantity managmenet =================== -->
	<script>

		document.addEventListener("DOMContentLoaded", function () {
		const quantityInputs = document.querySelectorAll(".quantity-input");
		const totalPriceElements = document.querySelectorAll(".total-price");
		const productPrices = Array.from(document.querySelectorAll(".product-price"))
								  .map(price => parseFloat(price.textContent))
								  .filter(price => !isNaN(price)); // Filter out NaN values
								  console.log(productPrices);
	
		const subtotalElement = document.querySelector(".subtotal");
	   
	
		quantityInputs.forEach((input, index) => {
			const minusButton = input.parentElement.querySelector(".js-btn-minus");
			const plusButton = input.parentElement.querySelector(".js-btn-plus");
			const productID = input.getAttribute('data-product-id');  
			console.log(productID);
	
			function updateMinusButtonStatus() {
				const quantity = parseInt(input.value, 10);
				if (quantity === 1) {
					minusButton.disabled = true;
				} else {
					minusButton.disabled = false;
				}
			}
	
			minusButton.addEventListener("click", function () {
				const quantity = parseInt(input.value, 10);
	
				if (quantity >= 1) {
				  quantitys = quantity - 1;
				  
				   handleQuantityUpdate(productID, quantity, index);
					const totalPrice = quantity * productPrices[index];
					totalPriceElements[index].textContent = ` ${totalPrice.toFixed(2)}`;
					updateSubtotal();
					updateMinusButtonStatus();
					
				}
			});
	
			plusButton.addEventListener("click", function () {
				const quantity = parseInt(input.value, 10);
				quantitys = quantity;
				
				handleQuantityUpdate(productID, quantitys, index);
	
				const totalPrice = quantitys * productPrices[index];
				totalPriceElements[index].textContent = ` ${totalPrice.toFixed(2)}`;
				updateSubtotal();
				updateMinusButtonStatus();
				
			});
		});
	
		async function handleQuantityUpdate(productID, quantitys, index) {
		try {
			const response = await fetch('/updateCart', {
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				},
				body: JSON.stringify({ productID: productID, quantity: quantitys })
			});
		   
			const data = await response.json();
	
			// Check if the response contains valid data
			if (data && data.products && data.products.length > 0) {
				const updatedItem = data.products[0];
				const productPrice = parseFloat(updatedItem.productID.price);
				const quantity = parseInt(updatedItem.quantity, 10);
	
				// Check if both quantity and product price are valid numbers
				if (!isNaN(productPrice) && !isNaN(quantity)) {
					const totalPrice = quantity * productPrice;
	
					// Update the total price in the UI
					totalPriceElements[index].textContent = ` ${totalPrice.toFixed(2)}`;
				} else {
					console.error('Invalid quantity or product price:', updatedItem);
				}
			} else {
				console.error('Invalid response data:', data);
			}
	
			// Update the subtotal and other UI elements
			updateSubtotal();
		} catch (error) {
			console.error('Error updating cart quantity:', error);
		}
	}
	
		function updateSubtotal() {
			const totalPrices = Array.from(totalPriceElements)
								 .map(total => parseFloat(total.textContent.replace(" ", "")))
								 .reduce((acc, val) => acc + val, 0);
			subtotalElement.textContent = ` ${totalPrices.toFixed(2)}`;
		}
	
	   
	
	});
	
	
	</script>	
	

<%-include('../users/layouts/footer.ejs') %>